# this config file has been written by Yash Diniz, and helps configure
# the nginx proxy...
# Reference: NodeJS security handbook

server_tokens off;

#proxying for websocket
map $http_upgrade $connection_upgrade {
	default upgrade;
	'' close;
}
upstream websocket {
	server 0.0.0.0:1896;
}
upstream bcscsocket {
	server 0.0.0.0:1818;
}

# listen at HTTP
# redirects to HTTPS are surprisingly simple and easy to configure on FOCUSA
server {
	listen 80;
	listen 443 ssl;
	server_name www.mypc.me 192.168.43.*;
	#replace www.mypc.me with the server IP address or domain name...
	
	# specify root directory for static file serving
	root "docs/";
	#put the file path in "apostrophes", and DON'T use escape or backslash characters in the path!
	# replace this root directory with the root of the file path to FOCUSA(~)...
	# listening on the HTTPS port gives us more flexibility...
	ssl_certificate "certs/focusa.crt.pem";
	ssl_certificate_key "certs/focusa.key";
	ssl_session_cache shared:SSL:50m;
	ssl_session_timeout 5m;
	ssl_dhparam "certs/dhparam.pem";
	ssl_prefer_server_ciphers on;
	ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:RC4";
	#completely disable SSLv3, since it's less secure than TLS...
	ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

	#Add HTTP security headers...
	add_header X-Frame-Options DENY;
	add_header X-XSS-Protection 1;
	add_header Pragma no-cache;
	add_header X-Content-Type-Options nosniff;

	#use gzip
	gzip on;
	gzip_comp_level 7;
	gzip_types text/plain text/css text/javascript application/javascript;
	gzip_proxied any;

	# optimise TCP
	tcp_nopush on;
	tcp_nodelay on;

	# optimise file uploads...
	client_body_in_file_only clean;
	client_body_buffer_size 2M;
	client_max_body_size 20M;
	send_timeout 300s;
	
	# add support for static file serving to the ~/docs/public/ folder in FOCUSA
	location /public {
		sendfile on;
		try_files $uri index.html index.htm;
		include /etc/nginx/mime.types;
		charset utf-8;
		expires 30d;
	}

	location /msg {
		proxy_pass http://websocket;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	}

	location /bcsc {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		# x-real-ip header should only be on the last proxy, closest to end user...
		# Use underscores_in_headers if you are making a secondary proxy to the primary proxy...
		# underscores_in_headers on;
		proxy_pass_request_headers on;
		proxy_pass http://bcscsocket;
		proxy_http_version 1.1;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection $connection_upgrade;
	}	

	# all other requests get proxied to nodeJS application
	location / {
		proxy_set_header Host $host;
		proxy_set_header X-Real-IP $remote_addr;
		# x-real-ip header should only be on the last proxy, closest to end user...
		# Use underscores_in_headers if you are making a secondary proxy to the primary proxy...
		# underscores_in_headers on;
		proxy_pass_request_headers on;
		# proxy_pass_request_headers should be on the primary proxy...

		# when proxy is used, the actual IP address will stay hidden...
		# proxy IP(0.0.0.0) will get saved in logs!!

		proxy_pass http://0.0.0.0:1896;
		# change this to the IP address where the server will run(preferable to keep 0.0.0.0, and server running at localhost)...
		proxy_redirect off;
	}
}

